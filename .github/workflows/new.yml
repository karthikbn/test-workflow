name: CITEST
on:
  workflow_dispatch:
    inputs:
      subscription-id:
        description: "The azure subscription ID of the subscription to be onboarded"
        required: true
        default: "f9d926e7-345a-4419-8d6e-515cb3a95383"

jobs:

  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: karthikbn/test-workflow
          ref: test
          token:  ${{ secrets.SECRET_TOKEN }}

      - name: Verify Job Status JSON Exit
        id: VerifyJson
        run: |
          if [ -f "${{ inputs.subscription-id }}.json" ]; then
            echo "Job Status Json Already Exist"
          else
            echo "Subscription Job Status JSON Dos Not exists, creating status JSON !"
            echo "{ \"status\" : \"Job1\" }" > ${{ inputs.subscription-id }}.json
            pwd
            ls -lrta
            git config --global user.email "karthikbn1410@gmail.com"
            git config --global user.name "karthikbn"
            git add .
            git commit -m "adding Status Job Json"
            git push
          fi


      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: shared-artifact
          path: ${{ inputs.subscription-id }}.json


  Job1_validate:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: verify
    outputs:
        current_status: ${{ steps.status.outputs.current_status }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: shared-artifact

      - name: Check for current status
        id: status
        run: |
           cat ${{ inputs.subscription-id }}.json
           current_status=`cat ${{ inputs.subscription-id }}.json | jq -r .status`
           echo "current_status=$current_status"
           echo "current_status=$current_status" >> $GITHUB_OUTPUT

  Job1_execute:
    runs-on: ubuntu-latest
    needs: Job1_validate
    if: ${{ always() && needs.Job1_validate.outputs.current_status == 'Job1' }}
    steps:
      - name: Trigger Workflow and wait
        uses: convictional/trigger-workflow-and-wait@v1.5.0
        with:
          owner: karthikbn
          repo: deploy-scripts
          github_token: ${{ secrets.SECRET_TOKEN }}
          workflow_file_name: blank.yml
          ref: master
          wait_interval: 10
          client_payload: '{}'
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
          inputs: '{"values" : "test"}'

  Job1_update:
    runs-on: ubuntu-latest
    needs: Job1_execute
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: karthikbn/test-workflow
          ref: test
          token:  ${{ secrets.SECRET_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: shared-artifact

      - name: Job 1 Update
        if: ${{ always() && needs.Job1_execute.result == 'success' }}
        run: |
           tmp=$(mktemp)
           jq '.status = "Job2"' ${{ inputs.subscription-id }}.json
           jq '.status = "Job2"' ${{ inputs.subscription-id }}.json > "$tmp" && mv "$tmp" ${{ inputs.subscription-id }}.json
           pwd
           ls -lrta
           cp -rf ${{ inputs.subscription-id }}.json .
           ls -lrta
           git config --global user.email "karthikbn1410@gmail.com"
           git config --global user.name "karthikbn"
           git add .
           git commit -m "adding Status Job Json"
           git push
